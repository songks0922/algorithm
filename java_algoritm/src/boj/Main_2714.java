package boj;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer;public class Main_2714 {    static final int INIT_ASCII_NUMBER = 64;    static final int MAX_SIZE = 5;    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int T = Integer.parseInt(br.readLine());        for (int i = 0; i < T; i++) {            StringTokenizer st = new StringTokenizer(br.readLine());            int R = Integer.parseInt(st.nextToken());            int C = Integer.parseInt(st.nextToken());            char matrix[][] = new char[R][C];            String flatten = st.nextToken();            initMatrix(matrix, R, C, flatten);            String solves = solve(matrix, R, C);            System.out.println(solves);        }    }    public static void initMatrix(char matrix[][], int row, int column, String flatten) {        char[] chars = flatten.toCharArray();        int index = 0;        for (int i = 0; i < row; i++) {            for (int j = 0; j < column; j++) {                matrix[i][j] = chars[index++];            }        }    }    private static char convert(String binary) {        int decimal = Integer.parseInt(binary, 2);        decimal += INIT_ASCII_NUMBER;        if (decimal == INIT_ASCII_NUMBER) {            return ' ';        }        return (char) decimal;    }    private static String solve(char matrix[][], int row, int column) {        int direction = 0;        int len = row * column;        int dx[] = { 0, 1, 0, -1 };        int dy[] = { 1, 0, -1, 0 };        StringBuilder sb = new StringBuilder();        int x = 0;        int y = 0;        for (int i = 0; i < len; i++) {            if (y > row - 1) {                direction++;                y = column - 1;            }            sb.append(matrix[x][y]);            x += dx[direction];            y += dy[direction];        }        return sb.toString();    }}